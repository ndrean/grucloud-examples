08:16:00.872 info : CliMain      GruCloud 1.10.2 
08:16:00.874 info : CliMain      Fri, 02 Apr 2021 13:16:00 GMT 
08:16:00.874 info : CliMain      argv: /usr/local/bin/node,/Users/utilisateur/grucloud-exemples/episode1/node_modules/.bin/gc,a,-f 
08:16:00.875 info : CliMain      stage: undefined 
08:16:00.877 info : ConfigLoader ConfigLoader /Users/utilisateur/grucloud-exemples/episode1, dev 
08:16:00.877 info : ConfigLoader envFromDefault: /Users/utilisateur/grucloud-exemples/episode1 
08:16:00.878 info : ConfigLoader default environment file /Users/utilisateur/grucloud-exemples/episode1/default.env  does not exist 
08:16:00.878 info : ConfigLoader envFromStage: dev 
08:16:01.308 info : AwsProvider  mergeConfig : {
    "region": "eu-west-3",
    "projectName": "episode1",
    "bucketName": "tutogrucloud1.com"
} 
08:16:01.355 info : ProviderCommon filterReadClient types: undefined, all: undefined, #clients 27, #targets: 2 
08:16:01.355 info : ProviderCommon filterByType inputs #clients 27, #targetTypes 2, #types 0 
08:16:01.359 info : ProviderCommon filterByType result #clients 2 
08:16:01.359 info : ProviderCommon filterReadClient types: undefined, targetTypes: S3Bucket,S3Object #clients 2, final types: S3Bucket, S3Object 
08:16:01.360 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws"
    },
    "nextState": "WAITING"
} 
08:16:01.362 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::start"
    },
    "nextState": "WAITING"
} 
08:16:01.363 info : CoreProvider spinnersStartClient Listing, #client 2 
08:16:01.363 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Listing",
        "state": {
            "completed": 0,
            "total": 2
        }
    },
    "nextState": "WAITING"
} 
08:16:01.364 info : CliUtils     onStateChange: {
    "context": {
        "hide": true,
        "uri": "aws::Listing::S3Bucket"
    },
    "nextState": "WAITING"
} 
08:16:01.364 info : CliUtils     onStateChange: {
    "context": {
        "hide": true,
        "uri": "aws::Listing::S3Object"
    },
    "nextState": "WAITING"
} 
08:16:01.365 info : CoreProvider spinnersStartResources Querying, #resourcesPerType 2 
08:16:01.365 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying",
        "state": {
            "completed": 0,
            "total": 2
        }
    },
    "nextState": "WAITING"
} 
08:16:01.365 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying",
        "state": {
            "completed": 0,
            "total": 0
        }
    },
    "nextState": "RUNNING"
} 
08:16:01.366 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying::S3Bucket",
        "state": {
            "completed": 0,
            "total": 1
        }
    },
    "nextState": "WAITING"
} 
08:16:01.366 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying::S3Object",
        "state": {
            "completed": 0,
            "total": 1
        }
    },
    "nextState": "WAITING"
} 
08:16:01.367 info : ProviderGru  planQuery 
08:16:01.367 info : ProviderGru  listLives {} 
08:16:01.368 info : ProviderGru  filterProviderUp 
08:16:01.369 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::start"
    },
    "nextState": "RUNNING"
} 
08:16:01.949 info : AwsProvider  mergeConfig : {
    "region": "eu-west-3",
    "projectName": "episode1",
    "bucketName": "tutogrucloud1.com"
} 
08:16:02.787 info : Retry        retryCall EC2.describeAvailabilityZones [], success 
08:16:02.790 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::start"
    },
    "nextState": "DONE"
} 
08:16:02.792 info : ProviderGru  filterProviderUp #providers 1 
08:16:02.793 info : CoreProvider listLives #clients: 27, {"providerName":"aws","title":"Listing","readWrite":false,"options":{}} 
08:16:02.793 info : ProviderCommon filterReadClient types: undefined, all: undefined, #clients 27, #targets: 2 
08:16:02.793 info : ProviderCommon filterByType inputs #clients 27, #targetTypes 2, #types 0 
08:16:02.795 info : ProviderCommon filterByType result #clients 2 
08:16:02.796 info : ProviderCommon filterReadClient types: undefined, targetTypes: S3Bucket,S3Object #clients 2, final types: S3Bucket, S3Object 
08:16:02.796 info : CoreProvider listLives #clients 2 
08:16:02.798 info : CliUtils     onStateChange: {
    "context": {
        "hide": true,
        "uri": "aws::Listing::S3Bucket"
    },
    "nextState": "RUNNING"
} 
08:16:02.798 info : S3Bucket     getList s3Bucket deep:true 
08:16:03.471 info : Retry        retryCall S3.listBuckets [], success 
08:16:03.472 info : S3Bucket     getList s3Bucket  
08:16:05.040 info : Retry        retryCall S3.getBucketTagging [{"Bucket":"thedownwinder.com"}], attempt 0/60 
08:16:05.042 info : AwsCommon    S3.getBucketTagging [{"Bucket":"thedownwinder.com"}]: {
    "message": "The TagSet does not exist",
    "code": "NoSuchTagSet",
    "region": null,
    "time": "2021-04-02T13:16:05.039Z",
    "requestId": "6DSGP5T09PG12HWD",
    "extendedRequestId": "RciFA5jjNDv75LX8XL9n6KbfJDqQUON+CNicG3Ney7Axs02h1bKl/plVdplWzaVGwy3h0KaF9vg=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 80.37594568291331
} 
08:16:05.043 info : Retry        retryCall getBucketTagging thedownwinder.com, attempt 0/5 
08:16:05.043 error: S3Bucket     getBucketTagging shouldRetryOnException {
    "name": "getBucketTagging thedownwinder.com",
    "error": {
        "message": "The TagSet does not exist",
        "code": "NoSuchTagSet",
        "region": null,
        "time": "2021-04-02T13:16:05.039Z",
        "requestId": "6DSGP5T09PG12HWD",
        "extendedRequestId": "RciFA5jjNDv75LX8XL9n6KbfJDqQUON+CNicG3Ney7Axs02h1bKl/plVdplWzaVGwy3h0KaF9vg=",
        "statusCode": 404,
        "retryable": false,
        "retryDelay": 80.37594568291331
    }
} 
08:16:05.044 error: S3Bucket     NoSuchTagSet: The TagSet does not exist
    at Request.extractError (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/services/s3.js:718:35)
    at Request.callListeners (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:106:20)
    at Request.emit (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:78:10)
    at Request.emit (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:688:14)
    at Request.transition (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:22:10)
    at AcceptorStateMachine.runTo (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/state_machine.js:14:12)
    at /Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/state_machine.js:26:10
    at Request.<anonymous> (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:38:9)
    at Request.<anonymous> (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:690:12)
    at Request.callListeners (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:116:18) 
08:16:05.044 error: S3Bucket     getBucketTagging shouldRetryOnException retry: false 
08:16:05.045 info : S3Bucket     getByName thedownwinder.com, deep: true 
08:16:05.065 info : Retry        retryCall S3.getBucketTagging [{"Bucket":"www.thedownwinder.com"}], attempt 0/60 
08:16:05.065 info : AwsCommon    S3.getBucketTagging [{"Bucket":"www.thedownwinder.com"}]: {
    "message": "The TagSet does not exist",
    "code": "NoSuchTagSet",
    "region": null,
    "time": "2021-04-02T13:16:05.064Z",
    "requestId": "6DSNF4885PPXBM0M",
    "extendedRequestId": "YDecbRrpMbicIFqNjnBPC0c3D0Zn3BcL7lf1CzQ79KMu1DiTwiKPTauvrWIqx2kPu2jU1KiA7xw=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 61.424998761459904
} 
08:16:05.065 info : Retry        retryCall getBucketTagging www.thedownwinder.com, attempt 0/5 
08:16:05.066 error: S3Bucket     getBucketTagging shouldRetryOnException {
    "name": "getBucketTagging www.thedownwinder.com",
    "error": {
        "message": "The TagSet does not exist",
        "code": "NoSuchTagSet",
        "region": null,
        "time": "2021-04-02T13:16:05.064Z",
        "requestId": "6DSNF4885PPXBM0M",
        "extendedRequestId": "YDecbRrpMbicIFqNjnBPC0c3D0Zn3BcL7lf1CzQ79KMu1DiTwiKPTauvrWIqx2kPu2jU1KiA7xw=",
        "statusCode": 404,
        "retryable": false,
        "retryDelay": 61.424998761459904
    }
} 
08:16:05.066 error: S3Bucket     NoSuchTagSet: The TagSet does not exist
    at Request.extractError (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/services/s3.js:718:35)
    at Request.callListeners (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:106:20)
    at Request.emit (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:78:10)
    at Request.emit (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:688:14)
    at Request.transition (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:22:10)
    at AcceptorStateMachine.runTo (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/state_machine.js:14:12)
    at /Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/state_machine.js:26:10
    at Request.<anonymous> (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:38:9)
    at Request.<anonymous> (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:690:12)
    at Request.callListeners (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:116:18) 
08:16:05.066 error: S3Bucket     getBucketTagging shouldRetryOnException retry: false 
08:16:05.066 info : S3Bucket     getByName www.thedownwinder.com, deep: true 
08:16:05.245 info : Retry        retryCall S3.getBucketTagging [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], attempt 0/60 
08:16:05.245 info : AwsCommon    S3.getBucketTagging [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}]: {
    "message": "The TagSet does not exist",
    "code": "NoSuchTagSet",
    "region": null,
    "time": "2021-04-02T13:16:05.244Z",
    "requestId": "6DSX04PM9NDE5NEV",
    "extendedRequestId": "MUmwd2o9+tkZDB/GzjbutWqoxYDDuSwwVGbBrwl8fdZKE5jZ9E3iU5W7qVn7rEVZHOyWnRYaGNQ=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 14.722686507742822
} 
08:16:05.246 info : Retry        retryCall getBucketTagging elasticbeanstalk-eu-west-3-760158738954, attempt 0/5 
08:16:05.246 error: S3Bucket     getBucketTagging shouldRetryOnException {
    "name": "getBucketTagging elasticbeanstalk-eu-west-3-760158738954",
    "error": {
        "message": "The TagSet does not exist",
        "code": "NoSuchTagSet",
        "region": null,
        "time": "2021-04-02T13:16:05.244Z",
        "requestId": "6DSX04PM9NDE5NEV",
        "extendedRequestId": "MUmwd2o9+tkZDB/GzjbutWqoxYDDuSwwVGbBrwl8fdZKE5jZ9E3iU5W7qVn7rEVZHOyWnRYaGNQ=",
        "statusCode": 404,
        "retryable": false,
        "retryDelay": 14.722686507742822
    }
} 
08:16:05.246 error: S3Bucket     NoSuchTagSet: The TagSet does not exist
    at Request.extractError (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/services/s3.js:718:35)
    at Request.callListeners (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:106:20)
    at Request.emit (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:78:10)
    at Request.emit (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:688:14)
    at Request.transition (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:22:10)
    at AcceptorStateMachine.runTo (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/state_machine.js:14:12)
    at /Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/state_machine.js:26:10
    at Request.<anonymous> (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:38:9)
    at Request.<anonymous> (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/request.js:690:12)
    at Request.callListeners (/Users/utilisateur/grucloud-exemples/episode1/node_modules/aws-sdk/lib/sequential_executor.js:116:18) 
08:16:05.247 error: S3Bucket     getBucketTagging shouldRetryOnException retry: false 
08:16:05.247 info : S3Bucket     getByName elasticbeanstalk-eu-west-3-760158738954, deep: true 
08:16:05.783 info : Retry        retryCall S3.headBucket [{"Bucket":"thedownwinder.com"}], success 
08:16:05.832 info : Retry        retryCall S3.headBucket [{"Bucket":"www.thedownwinder.com"}], success 
08:16:06.074 info : Retry        retryCall S3.headBucket [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.153 info : Retry        retryCall S3.getBucketLogging [{"Bucket":"thedownwinder.com"}], success 
08:16:07.155 info : Retry        retryCall S3.getBucketLogging [{"Bucket":"www.thedownwinder.com"}], success 
08:16:07.171 info : Retry        retryCall S3.getBucketReplication [{"Bucket":"www.thedownwinder.com"}], attempt 0/60 
08:16:07.172 info : AwsCommon    S3.getBucketReplication [{"Bucket":"www.thedownwinder.com"}]: {
    "message": "The replication configuration was not found",
    "code": "ReplicationConfigurationNotFoundError",
    "region": null,
    "time": "2021-04-02T13:16:07.171Z",
    "requestId": "KNEJTFRRR1N99AF0",
    "extendedRequestId": "e4kDM3mNM0sGzNzKiT1urL87tEnxHJaEWlipS1ZJR2eTWYYjtZ3BtrhNd1oU4rgP9aJt4OXDfMU=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 85.7021633131815
} 
08:16:07.174 info : Retry        retryCall S3.getBucketRequestPayment [{"Bucket":"thedownwinder.com"}], success 
08:16:07.177 info : Retry        retryCall S3.getBucketEncryption [{"Bucket":"www.thedownwinder.com"}], attempt 0/60 
08:16:07.177 info : AwsCommon    S3.getBucketEncryption [{"Bucket":"www.thedownwinder.com"}]: {
    "message": "The server side encryption configuration was not found",
    "code": "ServerSideEncryptionConfigurationNotFoundError",
    "region": null,
    "time": "2021-04-02T13:16:07.177Z",
    "requestId": "KNEWQPZMPJFTAZXP",
    "extendedRequestId": "xjDV4SsH4YQ3OUkTys43dhmJ63l1zHedhJScPlxyfMb+6+O+VW2iDw02Il5QlnyGPRBUzlprCa4=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 21.21278047342543
} 
08:16:07.216 info : Retry        retryCall S3.getBucketLifecycleConfiguration [{"Bucket":"www.thedownwinder.com"}], attempt 0/60 
08:16:07.217 info : AwsCommon    S3.getBucketLifecycleConfiguration [{"Bucket":"www.thedownwinder.com"}]: {
    "message": "The lifecycle configuration does not exist",
    "code": "NoSuchLifecycleConfiguration",
    "region": null,
    "time": "2021-04-02T13:16:07.216Z",
    "requestId": "KNEGWR5A6WWXD5FE, KNEGWR5A6WWXD5FE",
    "extendedRequestId": "nHp31Bxd5nhhI5yvtB0BnXhzJ8rqBBZaYOtodGbN2jw3+QFfiRHJzvOYeob2kI0J5az9wyCNvoY=, nHp31Bxd5nhhI5yvtB0BnXhzJ8rqBBZaYOtodGbN2jw3+QFfiRHJzvOYeob2kI0J5az9wyCNvoY=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 30.208380543432977
} 
08:16:07.220 info : Retry        retryCall S3.getBucketWebsite [{"Bucket":"www.thedownwinder.com"}], success 
08:16:07.222 info : Retry        retryCall S3.getBucketLocation [{"Bucket":"www.thedownwinder.com"}], success 
08:16:07.238 info : Retry        retryCall S3.getBucketPolicy [{"Bucket":"www.thedownwinder.com"}], attempt 0/60 
08:16:07.238 info : AwsCommon    S3.getBucketPolicy [{"Bucket":"www.thedownwinder.com"}]: {
    "message": "The bucket policy does not exist",
    "code": "NoSuchBucketPolicy",
    "region": null,
    "time": "2021-04-02T13:16:07.237Z",
    "requestId": "KNEK0FP6GV2JYSXH",
    "extendedRequestId": "AifP2JjhZt3Zgb8UdBDgEXVw7gfN4c9anBbX7c/IYpjcsu9r39t/j8E/ldGik2cKHZKGOUpV9wY=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 63.66172851452956
} 
08:16:07.240 info : Retry        retryCall S3.getBucketAccelerateConfiguration [{"Bucket":"www.thedownwinder.com"}], success 
08:16:07.283 info : Retry        retryCall S3.getBucketNotificationConfiguration [{"Bucket":"www.thedownwinder.com"}], success 
08:16:07.310 info : Retry        retryCall S3.getBucketCors [{"Bucket":"www.thedownwinder.com"}], attempt 0/60 
08:16:07.310 info : AwsCommon    S3.getBucketCors [{"Bucket":"www.thedownwinder.com"}]: {
    "message": "The CORS configuration does not exist",
    "code": "NoSuchCORSConfiguration",
    "region": null,
    "time": "2021-04-02T13:16:07.310Z",
    "requestId": "KNETG8MMH19N8EPY",
    "extendedRequestId": "EnOL02s2VE80BbLXsiE6vnzk9zU6pkWo1vSO+EdqFfK572RJEBnkGLhgyCALkrlGjGPdFcqyj9M=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 59.41055378557385
} 
08:16:07.425 info : Retry        retryCall S3.getBucketLocation [{"Bucket":"thedownwinder.com"}], success 
08:16:07.478 info : Retry        retryCall S3.getBucketVersioning [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.508 info : Retry        retryCall S3.getBucketPolicyStatus [{"Bucket":"thedownwinder.com"}], success 
08:16:07.510 info : Retry        retryCall S3.getBucketRequestPayment [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.513 info : Retry        retryCall S3.getBucketAcl [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.531 info : Retry        retryCall S3.getBucketEncryption [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], attempt 0/60 
08:16:07.532 info : AwsCommon    S3.getBucketEncryption [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}]: {
    "message": "The server side encryption configuration was not found",
    "code": "ServerSideEncryptionConfigurationNotFoundError",
    "region": null,
    "time": "2021-04-02T13:16:07.531Z",
    "requestId": "FTEY7TZ3K98E4N4N",
    "extendedRequestId": "l/deXjOzndlwlVkj1rVZGAXOy4pZ4HjjwxGDxSGeOJROfeci74VT6QMBfuA5P1mnYD1H46Gk0sg=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 98.73374431266306
} 
08:16:07.581 info : Retry        retryCall S3.getBucketVersioning [{"Bucket":"thedownwinder.com"}], success 
08:16:07.584 info : Retry        retryCall S3.getBucketEncryption [{"Bucket":"thedownwinder.com"}], attempt 0/60 
08:16:07.584 info : AwsCommon    S3.getBucketEncryption [{"Bucket":"thedownwinder.com"}]: {
    "message": "The server side encryption configuration was not found",
    "code": "ServerSideEncryptionConfigurationNotFoundError",
    "region": null,
    "time": "2021-04-02T13:16:07.584Z",
    "requestId": "KNEJYH95WD0JQZDG",
    "extendedRequestId": "bc2yGYxB0Nzle1sgvNOZC1oefnx4RLaqrt5mK/fO1yNjUWvfnuJq3bFG3wCQpkXk3gq0Ho4gKqs=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 25.290300157777402
} 
08:16:07.592 info : Retry        retryCall S3.getBucketNotificationConfiguration [{"Bucket":"thedownwinder.com"}], success 
08:16:07.613 info : Retry        retryCall S3.getBucketAccelerateConfiguration [{"Bucket":"thedownwinder.com"}], success 
08:16:07.616 info : Retry        retryCall S3.getBucketLifecycleConfiguration [{"Bucket":"thedownwinder.com"}], attempt 0/60 
08:16:07.617 info : AwsCommon    S3.getBucketLifecycleConfiguration [{"Bucket":"thedownwinder.com"}]: {
    "message": "The lifecycle configuration does not exist",
    "code": "NoSuchLifecycleConfiguration",
    "region": null,
    "time": "2021-04-02T13:16:07.616Z",
    "requestId": "KNESESN3B3MG68D5, KNESESN3B3MG68D5",
    "extendedRequestId": "0Rfopmi0C82idKg70VP90RA61RdzRMfTDteBE6XB6IlnA019cOgrqMYGN5i/omCj3n32gz1Tf5k=, 0Rfopmi0C82idKg70VP90RA61RdzRMfTDteBE6XB6IlnA019cOgrqMYGN5i/omCj3n32gz1Tf5k=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 39.80903446590982
} 
08:16:07.618 info : Retry        retryCall S3.getBucketNotificationConfiguration [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.619 info : Retry        retryCall S3.getBucketVersioning [{"Bucket":"www.thedownwinder.com"}], success 
08:16:07.620 info : Retry        retryCall S3.getBucketLocation [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.623 info : Retry        retryCall S3.getBucketWebsite [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], attempt 0/60 
08:16:07.623 info : AwsCommon    S3.getBucketWebsite [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}]: {
    "message": "The specified bucket does not have a website configuration",
    "code": "NoSuchWebsiteConfiguration",
    "region": null,
    "time": "2021-04-02T13:16:07.622Z",
    "requestId": "FTEYNXZT503WEESR",
    "extendedRequestId": "+NQEYFsWQehjSBYLFQISEt5QsiZhn1M1u0eWanKGT0T6NW0w2sV2Kox0/3DycsqUYEvtvg8XcaA=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 80.90596097934693
} 
08:16:07.625 info : Retry        retryCall S3.getBucketAcl [{"Bucket":"thedownwinder.com"}], success 
08:16:07.628 info : Retry        retryCall S3.getBucketWebsite [{"Bucket":"thedownwinder.com"}], success 
08:16:07.629 info : Retry        retryCall S3.getBucketPolicy [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.631 info : Retry        retryCall S3.getBucketLifecycleConfiguration [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], attempt 0/60 
08:16:07.631 info : AwsCommon    S3.getBucketLifecycleConfiguration [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}]: {
    "message": "The lifecycle configuration does not exist",
    "code": "NoSuchLifecycleConfiguration",
    "region": null,
    "time": "2021-04-02T13:16:07.630Z",
    "requestId": "FTEKB15J711EQK9T, FTEKB15J711EQK9T",
    "extendedRequestId": "q9xamGwt2KII5fb0aCcweNZdkn1iYB8q/3LBJHnCmEIXZgT/pCT4m5Q71ZPur8rxH2ZtGhuqYDI=, q9xamGwt2KII5fb0aCcweNZdkn1iYB8q/3LBJHnCmEIXZgT/pCT4m5Q71ZPur8rxH2ZtGhuqYDI=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 82.61314004388811
} 
08:16:07.650 info : Retry        retryCall S3.getBucketPolicyStatus [{"Bucket":"www.thedownwinder.com"}], attempt 0/60 
08:16:07.651 info : AwsCommon    S3.getBucketPolicyStatus [{"Bucket":"www.thedownwinder.com"}]: {
    "message": "The bucket policy does not exist",
    "code": "NoSuchBucketPolicy",
    "region": null,
    "time": "2021-04-02T13:16:07.650Z",
    "requestId": "KNEXED99DKCWEZQZ",
    "extendedRequestId": "wYgkMl6/COTkVlEzstVHKEKuSeCXjVlPZSl8tsybDTsBURzbp16ocCr41kMFNpehX2Ue8CaxsPs=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 95.59696804967426
} 
08:16:07.652 info : Retry        retryCall S3.getBucketLogging [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.656 info : Retry        retryCall S3.getBucketCors [{"Bucket":"thedownwinder.com"}], success 
08:16:07.658 info : Retry        retryCall S3.getBucketReplication [{"Bucket":"thedownwinder.com"}], attempt 0/60 
08:16:07.658 info : AwsCommon    S3.getBucketReplication [{"Bucket":"thedownwinder.com"}]: {
    "message": "The replication configuration was not found",
    "code": "ReplicationConfigurationNotFoundError",
    "region": null,
    "time": "2021-04-02T13:16:07.657Z",
    "requestId": "KNEHASSC9WHST7QA",
    "extendedRequestId": "/c/Li8O6DGlifMjgAMlEazzwjdT7N+B9V6ePtrXhDkKOOJd2rG2LpDTs2btWeG9X+gvEjwfJtYI=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 56.39780422934248
} 
08:16:07.661 info : Retry        retryCall S3.getBucketReplication [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], attempt 0/60 
08:16:07.662 info : AwsCommon    S3.getBucketReplication [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}]: {
    "message": "The replication configuration was not found",
    "code": "ReplicationConfigurationNotFoundError",
    "region": null,
    "time": "2021-04-02T13:16:07.661Z",
    "requestId": "FTEJ8TC4BXFR62BV",
    "extendedRequestId": "Y8usHyao+DtIkLtYZQ/e1JIDvdV9uCVPbVNtU2zIgmhFD7yJX2c6T9telgs1iHc/ew8YpUpbHAY=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 55.248855506466384
} 
08:16:07.679 info : Retry        retryCall S3.getBucketPolicy [{"Bucket":"thedownwinder.com"}], success 
08:16:07.680 info : Retry        retryCall get s3 properties thedownwinder.com, success 
08:16:07.716 info : Retry        retryCall S3.getBucketRequestPayment [{"Bucket":"www.thedownwinder.com"}], success 
08:16:07.718 info : Retry        retryCall S3.getBucketAcl [{"Bucket":"www.thedownwinder.com"}], success 
08:16:07.718 info : Retry        retryCall get s3 properties www.thedownwinder.com, success 
08:16:07.872 info : Retry        retryCall S3.getBucketPolicyStatus [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:07.874 info : Retry        retryCall S3.getBucketAccelerateConfiguration [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], success 
08:16:08.090 info : Retry        retryCall S3.getBucketCors [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}], attempt 0/60 
08:16:08.091 info : AwsCommon    S3.getBucketCors [{"Bucket":"elasticbeanstalk-eu-west-3-760158738954"}]: {
    "message": "The CORS configuration does not exist",
    "code": "NoSuchCORSConfiguration",
    "region": null,
    "time": "2021-04-02T13:16:08.090Z",
    "requestId": "GPR8M9127VZW736Q",
    "extendedRequestId": "QkD2v5YRsr1Phttn/i9fAhguh0F3ay0yNtc+jFAE2iqFCUJOzeINk+oi4v/lbofde+eorNSlDWs=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 41.94231584267594
} 
08:16:08.091 info : Retry        retryCall get s3 properties elasticbeanstalk-eu-west-3-760158738954, success 
08:16:08.092 info : S3Bucket     getList s3bucket #items 3 
08:16:08.092 info : CoreProvider filterClient {"providerName":"aws","type":"S3Bucket"} 
08:16:08.095 info : CliUtils     onStateChange: {
    "context": {
        "hide": true,
        "uri": "aws::Listing::S3Bucket"
    },
    "nextState": "DONE"
} 
08:16:08.096 info : CliUtils     onStateChange: {
    "context": {
        "hide": true,
        "uri": "aws::Listing::S3Object"
    },
    "nextState": "RUNNING"
} 
08:16:08.096 info : S3Object     getList s3 #resources 1 
08:16:08.097 info : S3Object     getByName index.html 
08:16:08.594 info : Retry        retryCall S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], attempt 0/60 
08:16:08.595 info : AwsCommon    S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}]: {
    "message": null,
    "code": "NotFound",
    "region": null,
    "time": "2021-04-02T13:16:08.594Z",
    "requestId": "GPREAKE0SGKR6KQ7",
    "extendedRequestId": "o3NgqZGIVJSIDrVk0OwTCRLB4w4B9AouCI571sQ6apNXIstxyyWfeH5ROEAsTFK9ZI04ON8aB+Q=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 69.42389419007537
} 
08:16:08.595 info : S3Object     getList s3 total: 0 
08:16:08.596 info : CoreProvider filterClient {"providerName":"aws","type":"S3Object"} 
08:16:08.596 info : CliUtils     onStateChange: {
    "context": {
        "hide": true,
        "uri": "aws::Listing::S3Object"
    },
    "nextState": "DONE"
} 
08:16:08.597 info : Lister       Lister false 
08:16:08.598 info : CoreProvider listLives done 
08:16:08.598 info : ProviderGru  listLives result: {
    "error": false,
    "results": [
        {
            "type": "S3Bucket",
            "resources": [
                {
                    "uri": "aws::S3Bucket::elasticbeanstalk-eu-west-3-760158738954",
                    "name": "elasticbeanstalk-eu-west-3-760158738954",
                    "displayName": "elasticbeanstalk-eu-west-3-760158738954",
                    "id": "elasticbeanstalk-eu-west-3-760158738954",
                    "managedByUs": false,
                    "providerName": "aws",
                    "type": "S3Bucket",
                    "live": {
                        "Name": "elasticbeanstalk-eu-west-3-760158738954",
                        "CreationDate": "2020-08-16T21:02:07.000Z",
                        "LocationConstraint": "eu-west-3",
                        "Policy": {
                            "Policy": "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Sid\":\"eb-ad78f54a-f239-4c90-adda-49e5f56cb51e\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::760158738954:role/aws-elasticbeanstalk-ec2-role\"},\"Action\":\"s3:PutObject\",\"Resource\":\"arn:aws:s3:::elasticbeanstalk-eu-west-3-760158738954/resources/environments/logs/*\"},{\"Sid\":\"eb-af163bf3-d27b-4712-b795-d1e33e331ca4\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::760158738954:role/aws-elasticbeanstalk-ec2-role\"},\"Action\":[\"s3:ListBucket\",\"s3:ListBucketVersions\",\"s3:GetObject\",\"s3:GetObjectVersion\"],\"Resource\":[\"arn:aws:s3:::elasticbeanstalk-eu-west-3-760158738954\",\"arn:aws:s3:::elasticbeanstalk-eu-west-3-760158738954/resources/environments/*\"]},{\"Sid\":\"eb-58950a8c-feb6-11e2-89e0-0800277d041b\",\"Effect\":\"Deny\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"s3:DeleteBucket\",\"Resource\":\"arn:aws:s3:::elasticbeanstalk-eu-west-3-760158738954\"}]}"
                        },
                        "PolicyStatus": {
                            "IsPublic": false
                        }
                    },
                    "cannotBeDeleted": false
                },
                {
                    "uri": "aws::S3Bucket::thedownwinder.com",
                    "name": "thedownwinder.com",
                    "displayName": "thedownwinder.com",
                    "id": "thedownwinder.com",
                    "managedByUs": false,
                    "providerName": "aws",
                    "type": "S3Bucket",
                    "live": {
                        "Name": "thedownwinder.com",
                        "CreationDate": "2020-09-17T14:13:45.000Z",
                        "LocationConstraint": "eu-west-3",
                        "PolicyStatus": {
                            "IsPublic": true
                        },
                        "WebsiteConfiguration": {
                            "IndexDocument": {
                                "Suffix": "index.html"
                            },
                            "ErrorDocument": {
                                "Key": "index.html"
                            },
                            "RoutingRules": []
                        },
                        "CORSConfiguration": {
                            "CORSRules": [
                                {
                                    "AllowedHeaders": [
                                        "*"
                                    ],
                                    "AllowedMethods": [
                                        "PUT",
                                        "POST",
                                        "DELETE"
                                    ],
                                    "AllowedOrigins": [
                                        "http://thedownwinder.com"
                                    ],
                                    "ExposeHeaders": [
                                        "x-amz-server-side-encryption",
                                        "x-amz-request-id",
                                        "x-amz-id-2"
                                    ],
                                    "MaxAgeSeconds": 3000
                                }
                            ]
                        },
                        "Policy": {
                            "Policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"PublicRead\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":[\"s3:GetObject\",\"s3:GetObjectVersion\"],\"Resource\":\"arn:aws:s3:::thedownwinder.com/*\"}]}"
                        }
                    },
                    "cannotBeDeleted": false
                },
                {
                    "uri": "aws::S3Bucket::www.thedownwinder.com",
                    "name": "www.thedownwinder.com",
                    "displayName": "www.thedownwinder.com",
                    "id": "www.thedownwinder.com",
                    "managedByUs": false,
                    "providerName": "aws",
                    "type": "S3Bucket",
                    "live": {
                        "Name": "www.thedownwinder.com",
                        "CreationDate": "2020-09-17T14:14:05.000Z",
                        "WebsiteConfiguration": {
                            "RedirectAllRequestsTo": {
                                "HostName": "thedownwinder.com",
                                "Protocol": "http"
                            },
                            "RoutingRules": []
                        },
                        "LocationConstraint": "eu-west-3"
                    },
                    "cannotBeDeleted": false
                }
            ],
            "providerName": "aws"
        }
    ],
    "providerName": "aws"
} 
08:16:08.598 info : ProviderCommon filterReadClient types: undefined, all: undefined, #clients 27, #targets: 2 
08:16:08.599 info : ProviderCommon filterByType inputs #clients 27, #targetTypes 2, #types 0 
08:16:08.602 info : ProviderCommon filterByType result #clients 2 
08:16:08.602 info : ProviderCommon filterReadClient types: undefined, targetTypes: S3Bucket,S3Object #clients 2, final types: S3Bucket, S3Object 
08:16:08.603 info : CoreProvider spinnersStopClient Listing, #clients 2 
08:16:08.603 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Listing",
        "state": {
            "completed": 0,
            "total": 0
        }
    },
    "nextState": "DONE"
} 
08:16:08.603 error: CliUtils     event DONE but aws::Listing was not created or is already deleted 
08:16:08.603 info : ProviderGru  listLives result: [object Object] 
08:16:08.604 info : ProviderGru  planQuery 
08:16:08.605 info : CoreProvider planQuery begins aws 
08:16:08.605 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws"
    },
    "nextState": "RUNNING"
} 
08:16:08.606 info : CoreProvider planFindDestroy {"options":{},"direction":1} 
08:16:08.607 info : CoreProvider planUpsert 
08:16:08.608 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying",
        "state": {
            "completed": 0,
            "total": 0
        }
    },
    "nextState": "RUNNING"
} 
08:16:08.608 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying::S3Bucket"
    },
    "nextState": "RUNNING"
} 
08:16:08.609 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying::S3Object"
    },
    "nextState": "RUNNING"
} 
08:16:08.609 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying::S3Bucket"
    },
    "nextState": "RUNNING"
} 
08:16:08.609 info : CoreProvider planUpsert resource: aws::S3Bucket::tutogrucloud1.com 
08:16:08.612 info : CoreProvider resolveDependencies for aws::S3Bucket::tutogrucloud1.com: , dependenciesMustBeUp: false 
08:16:08.612 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying::S3Object"
    },
    "nextState": "RUNNING"
} 
08:16:08.612 info : CoreProvider planUpsert resource: aws::S3Object::index.html 
08:16:08.613 error: ProviderGru  cannot find type S3Object on provider aws 
08:16:08.613 error: CoreProvider findLive cannot find type S3Object 
08:16:08.613 info : CoreProvider resolveDependencies for aws::S3Object::index.html: bucket, dependenciesMustBeUp: false 
08:16:08.615 info : CoreProvider resolveDependencies for aws::S3Bucket::tutogrucloud1.com: , dependenciesMustBeUp: false 
08:16:08.616 info : CoreProvider planUpsert resource: aws::S3Bucket::tutogrucloud1.com 
08:16:08.616 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying::S3Bucket"
    },
    "nextState": "DONE"
} 
08:16:08.617 info : CoreProvider planUpsert resource: aws::S3Object::index.html 
08:16:08.617 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying::S3Object"
    },
    "nextState": "DONE"
} 
08:16:08.618 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Querying",
        "state": {
            "completed": 0,
            "total": 0
        }
    },
    "nextState": "DONE"
} 
08:16:08.618 info : CoreProvider planUpsert done 
08:16:08.619 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws"
    },
    "nextState": "DONE"
} 
08:16:08.620 info : Lister       Lister false 
08:16:08.621 info : ProviderGru  planQuery done 
08:16:08.646 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws"
    },
    "nextState": "WAITING"
} 
08:16:08.646 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::start"
    },
    "nextState": "WAITING"
} 
08:16:08.646 info : CoreProvider spinnersStartResources Deploying, #resourcesPerType 2 
08:16:08.647 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying",
        "state": {
            "completed": 0,
            "total": 2
        }
    },
    "nextState": "WAITING"
} 
08:16:08.647 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying",
        "state": {
            "completed": 0,
            "total": 0
        }
    },
    "nextState": "RUNNING"
} 
08:16:08.647 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying::S3Bucket",
        "state": {
            "completed": 0,
            "total": 1
        }
    },
    "nextState": "WAITING"
} 
08:16:08.648 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying::S3Object",
        "state": {
            "completed": 0,
            "total": 1
        }
    },
    "nextState": "WAITING"
} 
08:16:08.648 info : CoreProvider spinnersStart #hooks 1 
08:16:08.649 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::default::onDeployed"
    },
    "nextState": "WAITING"
} 
08:16:08.649 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::default::onDeployed::get http://tutogrucloud1.com.s3-website-us-east-1.amazonaws.com"
    },
    "nextState": "WAITING"
} 
08:16:08.650 info : ProviderGru  planApply 
08:16:08.651 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::start"
    },
    "nextState": "RUNNING"
} 
08:16:08.663 info : Retry        retryCall S3.listObjectsV2 [{"Bucket":"tutogrucloud1.com","Prefix":"index.html","MaxKeys":1}], attempt 0/60 
08:16:08.663 info : AwsCommon    S3.listObjectsV2 [{"Bucket":"tutogrucloud1.com","Prefix":"index.html","MaxKeys":1}]: {
    "message": "The specified bucket does not exist",
    "code": "NoSuchBucket",
    "region": null,
    "time": "2021-04-02T13:16:08.662Z",
    "requestId": "GPRDXC6XDYY63M5A",
    "extendedRequestId": "2aDTzlwnTC1sMRBPxzFGKBdI4C9SOxcRsD8Nd4Q9gGQAB9+r8hgO4GaTMIPt6eAj3ihd1JxRJoA=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 74.74164244198947
} 
08:16:08.666 info : Retry        retryCall S3.getObjectTagging [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], attempt 0/60 
08:16:08.666 info : AwsCommon    S3.getObjectTagging [{"Bucket":"tutogrucloud1.com","Key":"index.html"}]: {
    "message": "The specified bucket does not exist",
    "code": "NoSuchBucket",
    "region": null,
    "time": "2021-04-02T13:16:08.665Z",
    "requestId": "GPR9PTHJQG2FQZJ3",
    "extendedRequestId": "HDJqmobIoksrsnMVcVjWovWvipUzHM57WRTa84pfaas15sJUSVjT1Bs2SO1k6tdMezlUq/UD5II=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 35.43131744286936
} 
08:16:09.188 info : AwsProvider  mergeConfig : {
    "region": "eu-west-3",
    "projectName": "episode1",
    "bucketName": "tutogrucloud1.com"
} 
08:16:10.137 info : Retry        retryCall EC2.describeAvailabilityZones [], success 
08:16:10.137 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::start"
    },
    "nextState": "DONE"
} 
08:16:10.155 error: ProviderGru  planApply start error {
    "generatedMessage": true,
    "code": "ERR_ASSERTION",
    "expected": true,
    "operator": "=="
} 
08:16:10.156 info : CoreProvider Apply Plan aws 
08:16:10.156 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws"
    },
    "nextState": "RUNNING"
} 
08:16:10.160 info : Planner      DependencyTree up: [
    {
        "name": "tutogrucloud1.com",
        "uri": "aws::S3Bucket::tutogrucloud1.com",
        "dependsOn": []
    },
    {
        "name": "index.html",
        "uri": "aws::S3Object::index.html",
        "dependsOn": [
            {
                "providerName": "aws",
                "type": "S3Bucket",
                "name": "tutogrucloud1.com",
                "meta": {},
                "displayName": "tutogrucloud1.com",
                "uri": "aws::S3Bucket::tutogrucloud1.com"
            }
        ]
    }
] 
08:16:10.162 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying::S3Bucket"
    },
    "previousState": "WAITING",
    "nextState": "RUNNING"
} 
08:16:10.162 info : CoreProvider resolveDependencies for aws::S3Bucket::tutogrucloud1.com: , dependenciesMustBeUp: true 
08:16:10.163 info : CoreProvider resolveDependencies for aws::S3Bucket::tutogrucloud1.com: , dependenciesMustBeUp: false 
08:16:10.163 info : CoreProvider create {
    "resourceName": "tutogrucloud1.com",
    "type": "S3Bucket"
} 
08:16:10.163 info : S3Bucket     create bucket {
    "Bucket": "tutogrucloud1.com",
    "payload": {
        "ACL": "public-read",
        "WebsiteConfiguration": {
            "ErrorDocument": {
                "Key": "error.html"
            },
            "IndexDocument": {
                "Suffix": "index.html"
            }
        },
        "Bucket": "tutogrucloud1.com"
    }
} 
08:16:10.989 info : Retry        retryCall S3.createBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:10.989 info : Retry        retryCall s3 createBucket: tutogrucloud1.com, success 
08:16:10.989 info : S3Bucket     create bucket result "/tutogrucloud1.com" 
08:16:11.592 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], attempt 0/60 
08:16:11.592 info : AwsCommon    S3.headBucket [{"Bucket":"tutogrucloud1.com"}]: {
    "message": null,
    "code": "NotFound",
    "region": null,
    "time": "2021-04-02T13:16:11.592Z",
    "requestId": "Y35R6JFNA172VRSP",
    "extendedRequestId": "6WfYn7RZHoQ38QakSTGlZlyDgUNbJ3iFVRn+SBZ0ls9h3pwrjw4R/SFabtSuzCjjdMazfAXJclY=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 28.98568733773448
} 
08:16:11.593 info : Retry        retryCall s3 isUpById: tutogrucloud1.com, attempt 0/10 
08:16:11.593 info : Retry        shouldRetryOnException s3 isUpById: tutogrucloud1.com, error: {
    "code": 503,
    "type": "retryCall",
    "message": "not expected result",
    "result": false
} 
08:16:13.129 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:13.130 info : Retry        retryCall s3 isUpById: tutogrucloud1.com, success 
08:16:14.707 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:14.708 info : Retry        retryCall s3 isUpById: tutogrucloud1.com, success 
08:16:16.234 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:16.234 info : Retry        retryCall s3 isUpById: tutogrucloud1.com, success 
08:16:17.627 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:17.627 info : Retry        retryCall s3 isUpById: tutogrucloud1.com, success 
08:16:19.140 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:19.140 info : Retry        retryCall s3 isUpById: tutogrucloud1.com, success 
08:16:20.755 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:20.757 info : Retry        retryCall s3 isUpById: tutogrucloud1.com, success 
08:16:22.273 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:22.274 info : Retry        retryCall s3 isUpById: tutogrucloud1.com, success 
08:16:22.840 info : Retry        retryCall S3.putBucketTagging [{"Bucket":"tutogrucloud1.com","Tagging":{"TagSet":[{"Key":"Name","Value":"tutogrucloud1.com"},{"Key":"ManagedBy","Value":"GruCloud"},{"Key":"CreatedByProvider","Value":"aws"},{"Key":"stage","Value":"dev"},{"Key":"projectName","Value":"episode1"}]}}], success 
08:16:23.338 info : Retry        retryCall S3.getBucketTagging [{"Bucket":"tutogrucloud1.com"}], success 
08:16:23.339 info : Retry        retryCall tag tutogrucloud1.com, success 
08:16:23.830 info : Retry        retryCall S3.putBucketAcl [{"Bucket":"tutogrucloud1.com","ACL":"public-read"}], success 
08:16:24.455 info : Retry        retryCall S3.getBucketAcl [{"Bucket":"tutogrucloud1.com"}], success 
08:16:24.456 info : Retry        retryCall s3 getBucketAcl: tutogrucloud1.com, success 
08:16:25.135 info : Retry        retryCall S3.putBucketWebsite [{"Bucket":"tutogrucloud1.com","WebsiteConfiguration":{"ErrorDocument":{"Key":"error.html"},"IndexDocument":{"Suffix":"index.html"}}}], success 
08:16:25.135 info : Retry        retryCall s3 put: tutogrucloud1.com, success 
08:16:25.136 info : S3Bucket     created final tutogrucloud1.com 
08:16:25.136 info : CoreProvider getLive aws::S3Bucket::tutogrucloud1.com, deep: true 
08:16:25.136 info : S3Bucket     getByName tutogrucloud1.com, deep: true 
08:16:25.498 info : Retry        retryCall S3.headBucket [{"Bucket":"tutogrucloud1.com"}], success 
08:16:25.996 info : Retry        retryCall S3.getBucketNotificationConfiguration [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.001 info : Retry        retryCall S3.getBucketLifecycleConfiguration [{"Bucket":"tutogrucloud1.com"}], attempt 0/60 
08:16:26.001 info : AwsCommon    S3.getBucketLifecycleConfiguration [{"Bucket":"tutogrucloud1.com"}]: {
    "message": "The lifecycle configuration does not exist",
    "code": "NoSuchLifecycleConfiguration",
    "region": null,
    "time": "2021-04-02T13:16:25.998Z",
    "requestId": "CHNN6R3NJJBMCXJ0, CHNN6R3NJJBMCXJ0",
    "extendedRequestId": "asvecXLAnZYVHnTqZVKPvgMHZY5LUg35ccCT434KEdxzr/gCldLv2nM8RTVBWZ2blwcABp/944Y=, asvecXLAnZYVHnTqZVKPvgMHZY5LUg35ccCT434KEdxzr/gCldLv2nM8RTVBWZ2blwcABp/944Y=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 65.15267744147677
} 
08:16:26.002 info : Retry        retryCall S3.getBucketLocation [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.005 info : Retry        retryCall S3.getBucketTagging [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.006 info : Retry        retryCall getBucketTagging tutogrucloud1.com, success 
08:16:26.009 info : Retry        retryCall S3.getBucketPolicyStatus [{"Bucket":"tutogrucloud1.com"}], attempt 0/60 
08:16:26.009 info : AwsCommon    S3.getBucketPolicyStatus [{"Bucket":"tutogrucloud1.com"}]: {
    "message": "The bucket policy does not exist",
    "code": "NoSuchBucketPolicy",
    "region": null,
    "time": "2021-04-02T13:16:26.008Z",
    "requestId": "CHNZ9NZ4PPF40VZJ",
    "extendedRequestId": "IjzD/e2pcpW7i/mika+gxlX+srZvHm8HBi3n+eGEJ2yqWRrhNcnQxkLm5Nmb812fGik3qOvbY5M=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 68.77590850617057
} 
08:16:26.012 info : Retry        retryCall S3.getBucketVersioning [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.018 info : Retry        retryCall S3.getBucketAccelerateConfiguration [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.029 info : Retry        retryCall S3.getBucketReplication [{"Bucket":"tutogrucloud1.com"}], attempt 0/60 
08:16:26.029 info : AwsCommon    S3.getBucketReplication [{"Bucket":"tutogrucloud1.com"}]: {
    "message": "The replication configuration was not found",
    "code": "ReplicationConfigurationNotFoundError",
    "region": null,
    "time": "2021-04-02T13:16:26.028Z",
    "requestId": "CHNW1KX5GNX083EK",
    "extendedRequestId": "l9PpzsVjvfd59ioCGGk1wFjK7bRnT81ILmpBxzjiqqCtdVBmXHjLuDZlFj38E6W1addWgz4MlFw=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 48.44931861684518
} 
08:16:26.032 info : Retry        retryCall S3.getBucketEncryption [{"Bucket":"tutogrucloud1.com"}], attempt 0/60 
08:16:26.032 info : AwsCommon    S3.getBucketEncryption [{"Bucket":"tutogrucloud1.com"}]: {
    "message": "The server side encryption configuration was not found",
    "code": "ServerSideEncryptionConfigurationNotFoundError",
    "region": null,
    "time": "2021-04-02T13:16:26.031Z",
    "requestId": "CHNKHRRTSYM1FJ96",
    "extendedRequestId": "72ICmGkUAfoXV9Qjv6NCngFFd2ShiE8Uz8oQTsqfZyohMmcg6sPDjplI+iv0/FVe+bIuO13dOGw=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 30.146068391995207
} 
08:16:26.034 info : Retry        retryCall S3.getBucketPolicy [{"Bucket":"tutogrucloud1.com"}], attempt 0/60 
08:16:26.035 info : AwsCommon    S3.getBucketPolicy [{"Bucket":"tutogrucloud1.com"}]: {
    "message": "The bucket policy does not exist",
    "code": "NoSuchBucketPolicy",
    "region": null,
    "time": "2021-04-02T13:16:26.034Z",
    "requestId": "CHNJ0NVXZT84RJG4",
    "extendedRequestId": "mKyEBPtwe8IHyekN2cvY9m7iH97ak395Nlfi/2oc0K7dEbpg8Y+HjZGg+TJUlgopFaTfOvmf0iM=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 33.90385396198467
} 
08:16:26.036 info : Retry        retryCall S3.getBucketLogging [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.037 info : Retry        retryCall S3.getBucketRequestPayment [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.041 info : Retry        retryCall S3.getBucketWebsite [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.044 info : Retry        retryCall S3.getBucketAcl [{"Bucket":"tutogrucloud1.com"}], success 
08:16:26.047 info : Retry        retryCall S3.getBucketCors [{"Bucket":"tutogrucloud1.com"}], attempt 0/60 
08:16:26.048 info : AwsCommon    S3.getBucketCors [{"Bucket":"tutogrucloud1.com"}]: {
    "message": "The CORS configuration does not exist",
    "code": "NoSuchCORSConfiguration",
    "region": null,
    "time": "2021-04-02T13:16:26.047Z",
    "requestId": "CHNR2PXVRXD6R8QV",
    "extendedRequestId": "mPWrih4EZfRbHMRsPctF6cMRRFsxFDlQbSIbPvo30KhxokaxY4FbD2eUOEquKfiH7VssvQN4pEI=",
    "statusCode": 404,
    "retryable": false,
    "retryDelay": 66.95997345038
} 
08:16:26.048 info : Retry        retryCall get s3 properties tutogrucloud1.com, success 
08:16:26.048 info : CoreProvider created: aws::S3Bucket::tutogrucloud1.com 
08:16:26.049 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying::S3Bucket"
    },
    "previousState": "RUNNING",
    "nextState": "DONE"
} 
08:16:26.051 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying::S3Object"
    },
    "previousState": "WAITING",
    "nextState": "RUNNING"
} 
08:16:26.052 info : CoreProvider resolveDependencies for aws::S3Object::index.html: bucket, dependenciesMustBeUp: true 
08:16:26.054 info : CoreProvider resolveDependencies for aws::S3Bucket::tutogrucloud1.com: , dependenciesMustBeUp: false 
08:16:26.054 info : CoreProvider create {
    "resourceName": "index.html",
    "type": "S3Object"
} 
08:16:26.055 info : S3Object     create "index.html" 
08:16:26.518 info : Retry        retryCall S3.putObject [{"ACL":"public-read","ContentType":"text/html","Key":"index.html","Body":{"type":"Buffer","data":[60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,10,60,104,116,109,108,32,108,97,110,103,61,34,101,110,34,62,10,10,60,104,101,97,100,62,10,32,32,32,60,109,101,116,97,32,99,104,97,114,115,101,116,61,34,85,84,70,45,56,34,62,10,32,32,32,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,88,45,85,65,45,67,111,109,112,97,116,105,98,108,101,34,32,99,111,110,116,101,110,116,61,34,73,69,61,101,100,103,101,34,62,10,32,32,32,60,109,101,116,97,32,110,97,109,101,61,34,118,105,101,119,112,111,114,116,34,32,99,111,110,116,101,110,116,61,34,119,105,100,116,104,61,100,101,118,105,99,101,45,119,105,100,116,104,44,32,105,110,105,116,105,97,108,45,115,99,97,108,101,61,49,46,48,34,62,10,32,32,32,60,116,105,116,108,101,62,68,111,99,117,109,101,110,116,60,47,116,105,116,108,101,62,10,60,47,104,101,97,100,62,10,10,60,98,111,100,121,62,10,32,32,32,60,104,49,62,69,112,105,115,111,100,101,32,49,60,47,104,49,62,10,32,32,32,60,104,51,62,83,101,114,118,101,32,116,104,105,115,32,105,110,100,101,120,46,104,116,109,108,32,102,105,108,101,32,102,114,111,109,32,65,87,83,32,83,51,60,47,104,51,62,10,60,47,98,111,100,121,62,10,10,60,47,104,116,109,108,62]},"Bucket":"tutogrucloud1.com","ContentMD5":"kh1fzi0/kG01VpAuas59Lg==","Tagging":"ManagedBy=GruCloud&stage=dev&CreatedByProvider=aws&projectName=episode1","Metadata":{"md5hash":"kh1fzi0/kG01VpAuas59Lg=="}}], success 
08:16:26.518 info : Retry        retryCall s3 putObject: index.html, success 
08:16:27.013 info : Retry        retryCall S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], success 
08:16:27.013 info : S3Object     isUpById tutogrucloud1.com/index.html UP 
08:16:27.013 info : Retry        retryCall s3 isUpById: tutogrucloud1.com/index.html, success 
08:16:29.603 info : Retry        retryCall S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], success 
08:16:29.604 info : S3Object     isUpById tutogrucloud1.com/index.html UP 
08:16:29.604 info : Retry        retryCall s3 isUpById: tutogrucloud1.com/index.html, success 
08:16:31.290 info : Retry        retryCall S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], success 
08:16:31.290 info : S3Object     isUpById tutogrucloud1.com/index.html UP 
08:16:31.291 info : Retry        retryCall s3 isUpById: tutogrucloud1.com/index.html, success 
08:16:32.950 info : Retry        retryCall S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], success 
08:16:32.950 info : S3Object     isUpById tutogrucloud1.com/index.html UP 
08:16:32.950 info : Retry        retryCall s3 isUpById: tutogrucloud1.com/index.html, success 
08:16:34.636 info : Retry        retryCall S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], success 
08:16:34.636 info : S3Object     isUpById tutogrucloud1.com/index.html UP 
08:16:34.636 info : Retry        retryCall s3 isUpById: tutogrucloud1.com/index.html, success 
08:16:36.142 info : Retry        retryCall S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], success 
08:16:36.143 info : S3Object     isUpById tutogrucloud1.com/index.html UP 
08:16:36.143 info : Retry        retryCall s3 isUpById: tutogrucloud1.com/index.html, success 
08:16:36.144 info : S3Object     created object: {
    "ETag": "\"921d5fce2d3f906d3556902e6ace7d2e\""
} 
08:16:36.144 info : CoreProvider getLive aws::S3Object::index.html, deep: true 
08:16:36.144 info : S3Object     getByName index.html 
08:16:36.592 info : Retry        retryCall S3.headObject [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], success 
08:16:36.627 info : Retry        retryCall S3.getObjectTagging [{"Bucket":"tutogrucloud1.com","Key":"index.html"}], success 
08:16:36.641 info : Retry        retryCall S3.listObjectsV2 [{"Bucket":"tutogrucloud1.com","Prefix":"index.html","MaxKeys":1}], success 
08:16:36.642 info : CoreProvider created: aws::S3Object::index.html 
08:16:36.644 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying::S3Object"
    },
    "previousState": "RUNNING",
    "nextState": "DONE"
} 
08:16:36.646 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::Deploying",
        "state": {
            "completed": 0,
            "total": 0
        }
    },
    "nextState": "DONE"
} 
08:16:36.647 info : AwsDistribution onDeployed 
08:16:36.648 error: ProviderGru  cannot find type CloudFrontDistribution on provider aws 
08:16:36.648 info : AwsDistribution onDeployed {
    "distributions": []
} 
08:16:36.649 info : CoreProvider Apply done 
08:16:36.649 info : CoreProvider runHook hookType: onDeployed, #hooks 1 
08:16:36.649 info : CoreProvider runHook start default 
08:16:36.650 info : CoreProvider runScriptCommands hookName: default, type: onDeployed 
08:16:36.650 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::default::onDeployed"
    },
    "nextState": "RUNNING"
} 
08:16:36.651 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::default::onDeployed::get http://tutogrucloud1.com.s3-website-us-east-1.amazonaws.com"
    },
    "nextState": "RUNNING"
} 
08:16:38.071 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::default::onDeployed::get http://tutogrucloud1.com.s3-website-us-east-1.amazonaws.com"
    },
    "nextState": "DONE"
} 
08:16:38.072 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws::default::onDeployed"
    },
    "nextState": "DONE"
} 
08:16:38.073 info : CoreProvider runScriptCommands DONE {
    "results": [
        {
            "name": "get http://tutogrucloud1.com.s3-website-us-east-1.amazonaws.com"
        }
    ],
    "error": false
} 
08:16:38.073 info : CoreProvider runHook onDeployed stop 
08:16:38.073 info : CoreProvider runHook DONE 
08:16:38.074 info : CliUtils     onStateChange: {
    "context": {
        "uri": "aws"
    },
    "nextState": "DONE"
} 
08:16:38.075 info : ProviderGru  planApply done 
08:16:38.080 info : CliCommands  doPlanApply done 
08:16:38.080 info : CliCommands  has dependency error: undefined 
08:16:38.081 info : CliCommands  planApply done 
08:16:38.082 info : CliEntry     onExit 0 
